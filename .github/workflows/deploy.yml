on: push
name: deploy
jobs:
  main:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres
        env:
          POSTGRES_DB: db_test
          POSTGRES_USER: user_test
          POSTGRES_PASSWORD: password_test
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a health check
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      -
        name: checkout
        uses: actions/checkout@v1
      -
        name: set up python 3.8.6
        uses: actions/setup-python@v1
        with:
          python-version: 3.8.6
      -
        name: psycopg2 prerequisites
        run: sudo apt-get install python-dev libpq-dev
      -
        name: install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/production.txt
          pip install -r requirements/local.txt
      - name: run linters
        uses: wearerequired/lint-action@v1
        with:
          github_token: ${{ secrets.github_token }}
          black: true
          flake8: true
      -
        name: run migrations and test python true_house/manage.py test activities.tests
        run: python true_house/manage.py migrate
        env:
          POSTGRES_DB: db_test
          POSTGRES_USER: user_test
          POSTGRES_PASSWORD: password_test
          POSTGRES_HOST: localhost
      -
        name: set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: set up docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: login to docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: gamadorh1993/truehouse:latest
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      # - name: deploy to production
      #   uses: appleboy/ssh-action@master
      #   with:
      #     username: ${{ secrets.EC2_USERNAME }}
      #     host: ${{ secrets.EC2_HOST }}
      #     key: ${{ secrets.EC2_KEY }}
      #     port: ${{ secrets.EC2_PORT }}
      #     script: 'sudo docker-compose -f /root/docker-compose.yaml up -d --build web'
